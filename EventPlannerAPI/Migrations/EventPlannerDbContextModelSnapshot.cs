// <auto-generated />
using System;
using EventPlannerAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EventPlannerAPI.Migrations
{
    [DbContext(typeof(EventPlannerDbContext))]
    partial class EventPlannerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EventPlannerAPI.Models.Catering", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("About")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MenuDetails")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Rating")
                        .HasColumnType("numeric");

                    b.Property<string>("Tier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Caterings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            About = "High-end catering service with gourmet options.",
                            Contact = "info@gourmetdelights.com",
                            Image = "/catering-1.webp",
                            Location = "New York",
                            MenuDetails = "Italian, Mexican, and American cuisine",
                            Name = "Gourmet Delights",
                            Price = 1500.00m,
                            Rating = 4.5m,
                            Tier = "Premium"
                        },
                        new
                        {
                            Id = 2,
                            About = "Specializes in vegetarian and vegan meals.",
                            Contact = "contact@greenbites.com",
                            Image = "/catering-2.webp",
                            Location = "San Francisco",
                            MenuDetails = "Vegan salads, wraps, and smoothies",
                            Name = "Green Bites",
                            Price = 1200.00m,
                            Rating = 4.8m,
                            Tier = "Standard"
                        },
                        new
                        {
                            Id = 3,
                            About = "Classic catering with a wide range of dishes.",
                            Contact = "hello@classicfeasts.com",
                            Image = "/catering-3.webp",
                            Location = "Chicago",
                            MenuDetails = "American BBQ, salads, and desserts",
                            Name = "Classic Feasts",
                            Price = 1800.00m,
                            Rating = 4.6m,
                            Tier = "Standard"
                        },
                        new
                        {
                            Id = 4,
                            About = "Elegant catering for sophisticated events.",
                            Contact = "info@elegantevents.com",
                            Image = "/catering-4.webp",
                            Location = "Los Angeles",
                            MenuDetails = "French cuisine and gourmet options",
                            Name = "Elegant Events",
                            Price = 2000.00m,
                            Rating = 4.9m,
                            Tier = "Luxury"
                        },
                        new
                        {
                            Id = 5,
                            About = "Authentic Indian catering with a variety of dishes.",
                            Contact = "info@test.com",
                            Image = "/catering-5.webp",
                            Location = "Miami",
                            MenuDetails = "Indian curries, biryanis, and desserts",
                            Name = "Taste of India",
                            Price = 1600.00m,
                            Rating = 4.7m,
                            Tier = "Premium"
                        },
                        new
                        {
                            Id = 6,
                            About = "Fresh sushi catering for sushi lovers.",
                            Contact = "info@test.com",
                            Image = "/catering-6.webp",
                            Location = "New York",
                            MenuDetails = "Sushi rolls, sashimi, and nigiri",
                            Name = "Sushi Delight",
                            Price = 1400.00m,
                            Rating = 4.5m,
                            Tier = "Standard"
                        });
                });

            modelBuilder.Entity("EventPlannerAPI.Models.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Cost")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<int>("WeddingId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WeddingId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("EventPlannerAPI.Models.Photography", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("About")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PackageDetails")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Rating")
                        .HasColumnType("numeric");

                    b.Property<string>("Tier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Photographies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            About = "Specializing in wedding photography with a magical touch.",
                            Contact = "contact@photomagic.com",
                            Image = "/photography-1.webp",
                            Location = "Los Angeles",
                            Name = "PhotoMagic Studios",
                            PackageDetails = "Full-day coverage, digital album, and prints",
                            Price = 2500.00m,
                            Rating = 4.9m,
                            Tier = "Luxury"
                        },
                        new
                        {
                            Id = 2,
                            About = "Capturing the essence of every event.",
                            Contact = "info@eventsnapshots.com",
                            Image = "/photography-2.webp",
                            Location = "New York",
                            Name = "Event Snapshots",
                            PackageDetails = "Half-day coverage, digital photos",
                            Price = 1800.00m,
                            Rating = 4.7m,
                            Tier = "Standard"
                        },
                        new
                        {
                            Id = 3,
                            About = "High-quality photography with creative styles.",
                            Contact = "contact@memorablemoments.com",
                            Image = "/photography-3.webp",
                            Location = "Miami",
                            Name = "Memorable Moments",
                            PackageDetails = "Full-day coverage, digital and printed photos",
                            Price = 2200.00m,
                            Rating = 4.8m,
                            Tier = "Luxury"
                        },
                        new
                        {
                            Id = 4,
                            About = "Affordable and reliable photography services.",
                            Contact = "info@captureall.com",
                            Image = "/photography-4.webp",
                            Location = "San Francisco",
                            Name = "Capture All",
                            PackageDetails = "Basic coverage with digital photos",
                            Price = 1500.00m,
                            Rating = 4.5m,
                            Tier = "Standard"
                        },
                        new
                        {
                            Id = 5,
                            About = "Creating dreamy and romantic photos for your special day.",
                            Contact = "info@test.com",
                            Image = "/photography-5.webp",
                            Location = "Chicago",
                            Name = "Dreamy Shots",
                            PackageDetails = "Full-day coverage, digital album, prints",
                            Price = 2000.00m,
                            Rating = 4.6m,
                            Tier = "Premium"
                        },
                        new
                        {
                            Id = 6,
                            About = "Capturing candid moments with a creative eye.",
                            Contact = "info@test.com",
                            Image = "/photography-6.webp",
                            Location = "Los Angeles",
                            Name = "Candid Clicks",
                            PackageDetails = "Half-day coverage, digital photos",
                            Price = 1700.00m,
                            Rating = 4.7m,
                            Tier = "Standard"
                        });
                });

            modelBuilder.Entity("EventPlannerAPI.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CateringId")
                        .HasColumnType("integer");

                    b.Property<int?>("PhotographyId")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("VenueId")
                        .HasColumnType("integer");

                    b.Property<int>("WeddingId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CateringId");

                    b.HasIndex("PhotographyId");

                    b.HasIndex("VenueId");

                    b.HasIndex("WeddingId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("EventPlannerAPI.Models.Venue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("About")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Rating")
                        .HasColumnType("numeric");

                    b.Property<string>("Tier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Venues");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            About = "A luxurious venue with a grand view and ample space.",
                            Address = "123 Grand Ave, New York, NY",
                            Capacity = 500,
                            Contact = "contact@grandballroom.com",
                            Image = "/venue-1.webp",
                            Location = "New York",
                            Name = "Grand Ballroom",
                            Price = 8000.00m,
                            Rating = 4.9m,
                            Tier = "Luxury"
                        },
                        new
                        {
                            Id = 2,
                            About = "Beautiful beachside venue with stunning ocean views.",
                            Address = "456 Beach Blvd, Miami, FL",
                            Capacity = 300,
                            Contact = "info@oceanviewresort.com",
                            Image = "/venue-2.webp",
                            Location = "Miami",
                            Name = "Ocean View Resort",
                            Price = 6000.00m,
                            Rating = 4.7m,
                            Tier = "Premium"
                        },
                        new
                        {
                            Id = 3,
                            About = "A picturesque garden venue perfect for outdoor weddings.",
                            Address = "789 Garden St, San Francisco, CA",
                            Capacity = 250,
                            Contact = "contact@elegantgardens.com",
                            Image = "/venue-3.webp",
                            Location = "San Francisco",
                            Name = "Elegant Gardens",
                            Price = 5500.00m,
                            Rating = 4.8m,
                            Tier = "Premium"
                        },
                        new
                        {
                            Id = 4,
                            About = "A chic, modern space for urban weddings.",
                            Address = "101 Loft Lane, Chicago, IL",
                            Capacity = 150,
                            Contact = "info@modernloft.com",
                            Image = "/venue-4.webp",
                            Location = "Chicago",
                            Name = "Modern Loft",
                            Price = 4000.00m,
                            Rating = 4.6m,
                            Tier = "Standard"
                        },
                        new
                        {
                            Id = 5,
                            About = "A charming barn venue with a rustic ambiance.",
                            Address = "234 Barn Rd, Los Angeles, CA",
                            Capacity = 100,
                            Contact = "info@test.com",
                            Image = "/venue-5.webp",
                            Location = "Los Angeles",
                            Name = "Rustic Barn",
                            Price = 3500.00m,
                            Rating = 4.5m,
                            Tier = "Standard"
                        },
                        new
                        {
                            Id = 6,
                            About = "A serene mountain venue with breathtaking views.",
                            Address = "345 Mountain Rd, Denver, CO",
                            Capacity = 200,
                            Contact = "info@test.com",
                            Image = "/venue-6.webp",
                            Location = "Denver",
                            Name = "Mountain Retreat",
                            Price = 7000.00m,
                            Rating = 4.8m,
                            Tier = "Luxury"
                        });
                });

            modelBuilder.Entity("EventPlannerAPI.Models.Wedding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Budget")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("GuestCount")
                        .HasColumnType("integer");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PlannerId")
                        .HasColumnType("text");

                    b.Property<string>("PlannerUsername")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Weddings");
                });

            modelBuilder.Entity("EventPlannerAPI.Models.Expense", b =>
                {
                    b.HasOne("EventPlannerAPI.Models.Wedding", null)
                        .WithMany("Expenses")
                        .HasForeignKey("WeddingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EventPlannerAPI.Models.Service", b =>
                {
                    b.HasOne("EventPlannerAPI.Models.Catering", "Catering")
                        .WithMany()
                        .HasForeignKey("CateringId");

                    b.HasOne("EventPlannerAPI.Models.Photography", "Photography")
                        .WithMany()
                        .HasForeignKey("PhotographyId");

                    b.HasOne("EventPlannerAPI.Models.Venue", "Venue")
                        .WithMany()
                        .HasForeignKey("VenueId");

                    b.HasOne("EventPlannerAPI.Models.Wedding", "Wedding")
                        .WithMany("Services")
                        .HasForeignKey("WeddingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catering");

                    b.Navigation("Photography");

                    b.Navigation("Venue");

                    b.Navigation("Wedding");
                });

            modelBuilder.Entity("EventPlannerAPI.Models.Wedding", b =>
                {
                    b.Navigation("Expenses");

                    b.Navigation("Services");
                });
#pragma warning restore 612, 618
        }
    }
}
